[build-system]
requires = ["hatchling>=1.5.0"]
build-backend = "hatchling.build"

[project]
name = "resume-ats"
version = "0.1.0"
description = "Generate ATS-friendly resumes from YAML data with automated validation"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.9"
authors = [
    {name = "MathÃ©o Champagne", email = "matheo.guilloux@gmail.com"},
]
keywords = ["resume", "cv", "ats", "latex", "pdf"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "PyYAML>=6.0",
    "Jinja2>=3.1.0",
    "pydantic>=2.0.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]
ats = [
    "pyresparser>=1.0.6",
    "pdfplumber>=0.7.0",
    "nltk>=3.8",
    "spacy>=3.7.0",
]
dev = [
    "pre-commit>=3.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.5.0",
]

[project.scripts]
resume-build = "resume_ats.cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/resume-ats"
Repository = "https://github.com/yourusername/resume-ats"
Issues = "https://github.com/yourusername/resume-ats/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/resume_ats"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=resume_ats",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "ats: ATS compatibility tests",
]

[tool.black]
line-length = 88
target-version = ["py39"]
include = '\.pyi?$'

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # typer function calls in defaults are intentional
    "B904", # raise from exceptions - not critical for this project
    "B007", # unused loop variable - acceptable for enumerate patterns
    "UP035", # typing backwards compatibility
    "UP006", # typing backwards compatibility
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true 