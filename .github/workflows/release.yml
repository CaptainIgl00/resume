name: 🚀 Release CV

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v2.1.3, etc.

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write  # Required for creating releases
      
    steps:
    - name: 📂 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: 📝 Install LaTeX
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          texlive-xetex \
          texlive-latex-extra \
          texlive-fonts-recommended
          
    - name: 📦 Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[ats,test]"
        
    - name: 🔧 Setup ATS dependencies
      run: |
        python -m resume_ats.cli setup
        
    - name: 🏗️ Build all formats
      run: |
        python -m resume_ats.cli build --format pdf --format html --format json
        
    - name: 🤖 Validate ATS compatibility
      run: |
        python -m resume_ats.cli validate resume.yml build/Mathéo_Guilloux_CV.pdf
        
    - name: 📊 Generate ATS report
      run: |
        python -m resume_ats.cli extract build/Mathéo_Guilloux_CV.pdf --format json > build/ats-report.json
        
    - name: 📝 Create release notes
      run: |
        cat > release-notes.md << 'EOF'
        # Resume Release ${{ github.ref_name }}
        
        🎉 **New resume version available!**
        
        ## 📄 Generated Files
        - **PDF**: Professional resume in PDF format
        - **HTML**: Web-friendly version
        - **JSON**: Structured data export
        - **ATS Report**: Compatibility validation report
        
        ## ✅ Quality Assurance
        - ✅ All tests passed
        - ✅ ATS validation successful
        - ✅ Data extraction verified
        
        ## 🔧 Technical Details
        - Built with: Modern Python package
        - LaTeX Engine: XeLaTeX
        - Template: Awesome CV
        - Validation: Automated ATS testing
        
        ---
        *Generated automatically on $(date)*
        EOF
        
    - name: 🏷️ Extract version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: 📦 Prepare release assets
      run: |
        mkdir -p release-assets
        cp build/Mathéo_Guilloux_CV.pdf "release-assets/Mathéo_Guilloux_CV_${{ steps.get_version.outputs.VERSION }}.pdf"
        cp build/index.html "release-assets/resume_${{ steps.get_version.outputs.VERSION }}.html"
        cp build/resume.json "release-assets/resume_${{ steps.get_version.outputs.VERSION }}.json"
        cp build/ats-report.json "release-assets/ats-report_${{ steps.get_version.outputs.VERSION }}.json"
        
        # Create a ZIP archive with all files
        cd release-assets
        zip -r "../resume_complete_${{ steps.get_version.outputs.VERSION }}.zip" .
        cd ..
        
    - name: 🚀 Create GitHub Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Resume ${{ steps.get_version.outputs.VERSION }}
        body_path: release-notes.md
        draft: false
        prerelease: false
        
    - name: 📄 Upload PDF
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release-assets/Mathéo_Guilloux_CV_${{ steps.get_version.outputs.VERSION }}.pdf
        asset_name: Mathéo_Guilloux_CV_${{ steps.get_version.outputs.VERSION }}.pdf
        asset_content_type: application/pdf
        
    - name: 🌐 Upload HTML
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release-assets/resume_${{ steps.get_version.outputs.VERSION }}.html
        asset_name: resume_${{ steps.get_version.outputs.VERSION }}.html
        asset_content_type: text/html
        
    - name: 📊 Upload JSON
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release-assets/resume_${{ steps.get_version.outputs.VERSION }}.json
        asset_name: resume_${{ steps.get_version.outputs.VERSION }}.json
        asset_content_type: application/json
        
    - name: 📋 Upload ATS Report
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: release-assets/ats-report_${{ steps.get_version.outputs.VERSION }}.json
        asset_name: ats-report_${{ steps.get_version.outputs.VERSION }}.json
        asset_content_type: application/json
        
    - name: 📦 Upload Complete Archive
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: resume_complete_${{ steps.get_version.outputs.VERSION }}.zip
        asset_name: resume_complete_${{ steps.get_version.outputs.VERSION }}.zip
        asset_content_type: application/zip
        
    - name: 🎉 Release complete
      run: |
        echo "🚀 Release ${{ steps.get_version.outputs.VERSION }} created successfully!"
        echo "📄 PDF, HTML, JSON, and ATS report published." 